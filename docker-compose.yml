version: '3.8' # Specify docker-compose version

services:
  backend:
    build:
      context: ./keep-clone-backend # Path to the Dockerfile directory
      dockerfile: Dockerfile
    ports:
      - "3001:3001" # Map host port 3001 to container port 3001
    environment:
      # These should match the variables used in keep-clone-backend/db.js
      # and defined in keep-clone-backend/.env
      # For security, prefer using an .env file at the root for docker-compose
      # or rely on the .env file within the backend service if it's copied (though .dockerignore usually prevents this)
      # For now, we'll duplicate them here for clarity, but an .env file for compose is better.
      PORT: ${PORT:-3001} # Use host's PORT, or default to 3001
      DB_HOST: db # Service name of the PostgreSQL container
      DB_USER: ${DB_USER:-your_db_user} # Use host's or default
      DB_PASSWORD: ${DB_PASSWORD:-your_db_password} # Use host's or default
      DB_DATABASE: ${DB_DATABASE:-notes_db} # Use host's or default
      DB_PORT: ${DB_PORT_DB:-5432} # Port PostgreSQL listens on *inside* the Docker network
      # NODE_ENV: development # Optional: set node environment
    volumes:
      # Mounts the backend code into the container for development
      # Any changes in ./keep-clone-backend on the host will reflect in the container
      # Note: This might require `npm install` to be run inside the container
      # if node_modules is in the volume and not handled correctly by Dockerfile.
      # For production, you typically wouldn't mount the source code.
      - ./keep-clone-backend:/usr/src/app
      # An anonymous volume for node_modules to prevent host's node_modules from overwriting container's
      # if local node_modules exists and is different (e.g. different OS)
      - /usr/src/app/node_modules
    depends_on:
      - db # Ensures db service starts before backend
    restart: unless-stopped

  db:
    image: postgres:15-alpine # Use official PostgreSQL image
    environment:
      POSTGRES_USER: ${DB_USER:-your_db_user} # Must match DB_USER for backend
      POSTGRES_PASSWORD: ${DB_PASSWORD:-your_db_password} # Must match DB_PASSWORD for backend
      POSTGRES_DB: ${DB_DATABASE:-notes_db} # Must match DB_DATABASE for backend
    ports:
      # Optionally map PostgreSQL port to host for external access (e.g., pgAdmin)
      # Format: "host_port:container_port"
      - "${DB_PORT_HOST:-5433}:5432" # Example: access DB on host port 5433
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist database data
    restart: unless-stopped

volumes:
  postgres_data: # Defines the named volume for data persistence
